{"version":3,"file":"static/js/749.c51248b0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/stats/buffer.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/frameloop/order.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-utils/dist/es/memo.mjs"],"sourcesContent":["import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.currentTarget instanceof Element &&\n                event.currentTarget.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.currentTarget.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.5\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.5\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n"],"names":["resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","SubscriptionManager","constructor","this","subscriptions","add","handler","addUniqueItem","removeItem","notify","a","b","c","numSubscriptions","length","i","getSize","clear","combineFunctions","v","pipe","_len","arguments","transformers","Array","_key","reduce","optimizedAppearDataAttribute","camelToDash","isKeyframesTarget","isArray","str","replace","toLowerCase","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","dimensionValueTypes","number","px","percent","degrees","vw","vh","test","parse","findDimensionValueType","find","testValueType","invalidTemplates","Set","splitCSSVariableRegex","getVariableValue","current","element","depth","invariant","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","isCSSVariableToken","DOMKeyframesResolver","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","super","readKeyframes","keyframe","finalKeyframe","resolveNoneKeyframes","positionalKeys","has","origin","target","originType","targetType","isNumOrPxType","value","needsMeasurement","noneKeyframeIndexes","isZeroValueString","push","animatableTemplate","analyseComplexValue","values","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","getValue","jump","measureEndState","_a","finalKeyframeIndex","removedTransforms","forEach","_ref","unsetTransformName","unsetTransformValue","set","progress","from","to","toFromDifference","isMotionValue","Boolean","getVelocity","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","backOut","backIn","reverseEasing","backInOut","mirrorEasing","anticipate","p","pow","isAnimatable","complex","startsWith","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","filter","index","BaseAnimation","autoplay","delay","type","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","time","now","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","Promise","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","hex","rgba","hsla","asRGBA","color","model","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","key","template","createTransformer","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","max","velocityPerSecond","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","state","done","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","calcGeneratorDuration","maxGeneratorDuration","easing","generateLinearEasing","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","isBezierDefinition","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","KeyframeResolver$1","onResolved","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","activeAnimations","mainThread","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","acceleratedValues","supportsWaapi","memo","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","owner","supportsLinearEasing","isWaapiSupportedEasing","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","mapEasingToNativeEasing","statsBuffer","waapi","animate","fill","iterations","direction","finished","finally","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","GroupPlaybackControls","isColorString","splitColor","alpha$1","sanitize","createUnitType","unit","endsWith","split","progressPercentage","setMotionValue","hasValue","addValue","setTarget","transitionEnd","resolveFinalValueInKeyframes","seconds","milliseconds","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","parsedValue","parseComplexValue","source","numSections","convertNumbersToZero","_b","floatRegex","parsed","transformer","clearTime","useManualTiming","performance","queueMicrotask","defaultValueType","getDefaultValueType","acos","any","useConstant","init","useRef","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","r","substring","parseInt","item","indexOf","singleColorRegex","testProp","isNullish","aName","bName","cName","addProjectionMetrics","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","delete","process","frameloop","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","keepAlive","immediate","addValueToWillChange","willChange","getOptimisedAppearId","getCardContentUtilityClass","CardContentRoot","padding","component","as","layout","isCustomValue","toValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","eventName","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","scale","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","isRefObject","PanSession","handlers","transformPagePoint","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","currentTarget","hasPointerCapture","pointerId","handlePointerUp","capturePointer","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","setDragLock","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariableName","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","frameSteps","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","press","_element","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","originZ","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","updateDimensions","getAttribute","motion","createDomVisualElement","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","maxDefaults","applyDefaultFilter","slice","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","int","zIndex","fillOpacity","strokeOpacity","numOctaves","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","getValueState","rgbUnit","clampRgbUnit","requestAnimationFrame","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","runAll","getAll","propName","setAll","newValue","methodName","onResolve","onReject","catch","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","resolution","points","numPoints","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","action","actionName","isNodeOrChild","parentElement","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","targetOrSelector","onPressStart","targets","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","isOutside","isTrusted","rect","innerWidth","innerHeight","clientX","clientY","cancelEvent","canAddKeyboardAccessibility"],"sourceRoot":""}