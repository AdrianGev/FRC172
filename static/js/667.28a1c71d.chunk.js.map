{"version":3,"file":"static/js/667.28a1c71d.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/LocationOn.js","components/CountdownTimer.tsx","pages/CalendarPage.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'LocationOn');","import React, { useState, useEffect } from 'react';\nimport { Box, Card, Typography, Grid } from '@mui/material';\nimport { motion } from 'framer-motion';\n\ninterface TimeLeft {\n  months: number;\n  weeks: number;\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\ninterface CountdownTimerProps {\n  targetDate: Date;\n  eventName: string;\n}\n\nconst calculateTimeLeft = (targetDate: Date): TimeLeft => {\n  const difference = targetDate.getTime() - new Date().getTime();\n  \n  if (difference <= 0) {\n    return {\n      months: 0,\n      weeks: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  const months = Math.floor(difference / (1000 * 60 * 60 * 24 * 30.44));\n  const weeks = Math.floor((difference % (1000 * 60 * 60 * 24 * 30.44)) / (1000 * 60 * 60 * 24 * 7));\n  const days = Math.floor((difference % (1000 * 60 * 60 * 24 * 7)) / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n  return { months, weeks, days, hours, minutes, seconds };\n};\n\nconst TimeUnit = ({ value, label }: { value: number; label: string }) => (\n  <motion.div\n    initial={{ scale: 0.9, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    transition={{ duration: 0.5 }}\n  >\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 2,\n        boxShadow: 2,\n        minWidth: '100px',\n      }}\n    >\n      <Typography variant=\"h4\" component=\"div\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\n        {value.toString().padStart(2, '0')}\n      </Typography>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {label}\n      </Typography>\n    </Box>\n  </motion.div>\n);\n\nexport const CountdownTimer: React.FC<CountdownTimerProps> = ({ targetDate, eventName }) => {\n  const [timeLeft, setTimeLeft] = useState<TimeLeft>(calculateTimeLeft(targetDate));\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft(targetDate));\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [targetDate]);\n\n  return (\n    <Card\n      sx={{\n        p: 4,\n        mb: 4,\n        background: 'linear-gradient(45deg, #1a237e 30%, #7c4dff 90%)',\n        color: 'white',\n      }}\n    >\n      <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ color: 'white' }}>\n        Countdown to {eventName}\n      </Typography>\n      <Grid container spacing={2} justifyContent=\"center\" sx={{ mt: 2 }}>\n        <Grid item>\n          <TimeUnit value={timeLeft.months} label=\"Months\" />\n        </Grid>\n        <Grid item>\n          <TimeUnit value={timeLeft.weeks} label=\"Weeks\" />\n        </Grid>\n        <Grid item>\n          <TimeUnit value={timeLeft.days} label=\"Days\" />\n        </Grid>\n        <Grid item>\n          <TimeUnit value={timeLeft.hours} label=\"Hours\" />\n        </Grid>\n        <Grid item>\n          <TimeUnit value={timeLeft.minutes} label=\"Minutes\" />\n        </Grid>\n        <Grid item>\n          <TimeUnit value={timeLeft.seconds} label=\"Seconds\" />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n","import React from 'react';\nimport {\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  Box,\n  Grid,\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { CountdownTimer } from '../components/CountdownTimer';\n\ninterface Event {\n  title: string;\n  location: string;\n  startDate: Date;\n  endDate: Date;\n}\n\nconst events: Event[] = [\n  {\n    title: 'Week 1',\n    location: 'New England District UNH Event - Durham, NH',\n    startDate: new Date('2025-03-01'),\n    endDate: new Date('2025-03-03')\n  },\n  {\n    title: 'Week 3',\n    location: 'New England District WPI Event - Lewiston, ME',\n    startDate: new Date('2025-03-14'),\n    endDate: new Date('2025-03-16')\n  },\n  {\n    title: 'District Championship',\n    location: 'New England District Championship - West Springfield, MA',\n    startDate: new Date('2025-04-10'),\n    endDate: new Date('2025-04-13')\n  }\n];\n\n// Sort events by start date\nconst sortedEvents = [...events].sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\n\n// Find the next upcoming event\nconst getNextEvent = () => {\n  const now = new Date();\n  return sortedEvents.find(event => event.startDate > now) || sortedEvents[0];\n};\n\nconst formatDateRange = (startDate: Date, endDate: Date) => {\n  const options: Intl.DateTimeFormatOptions = { \n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  };\n  return `${startDate.toLocaleDateString('en-US', options)} - ${endDate.toLocaleDateString('en-US', options)}`;\n};\n\nconst CalendarPage = () => {\n  const nextEvent = getNextEvent();\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 8 }}>\n      <motion.div\n        initial={{ y: -20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\" sx={{ mb: 6 }}>\n          Team Calendar\n        </Typography>\n\n        <CountdownTimer \n          targetDate={nextEvent.startDate}\n          eventName={nextEvent.title}\n        />\n\n        <Grid container spacing={3}>\n          {sortedEvents.map((event, index) => (\n            <Grid item xs={12} key={event.title}>\n              <motion.div\n                initial={{ x: -20, opacity: 0 }}\n                animate={{ x: 0, opacity: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n              >\n                <Card \n                  sx={{ \n                    mb: 2,\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'scale(1.02)',\n                    },\n                  }}\n                >\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"div\" gutterBottom color=\"primary\">\n                      {event.title}\n                    </Typography>\n                    \n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                      <LocationOnIcon color=\"action\" sx={{ mr: 1 }} />\n                      <Typography variant=\"body1\" color=\"text.secondary\">\n                        {event.location}\n                      </Typography>\n                    </Box>\n\n                    <Typography variant=\"body1\">\n                      {formatDateRange(event.startDate, event.endDate)}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </Grid>\n          ))}\n        </Grid>\n      </motion.div>\n    </Container>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["createSvgIcon","_jsx","d","calculateTimeLeft","targetDate","difference","getTime","Date","months","weeks","days","hours","minutes","seconds","Math","floor","TimeUnit","_ref","value","label","motion","div","initial","scale","opacity","animate","transition","duration","children","_jsxs","Box","sx","display","flexDirection","alignItems","p","bgcolor","borderRadius","boxShadow","minWidth","Typography","variant","component","color","fontWeight","toString","padStart","CountdownTimer","_ref2","eventName","timeLeft","setTimeLeft","useState","useEffect","timer","setInterval","clearInterval","Card","mb","background","align","gutterBottom","Grid","container","spacing","justifyContent","mt","item","sortedEvents","title","location","startDate","endDate","sort","a","b","formatDateRange","options","month","day","year","toLocaleDateString","CalendarPage","nextEvent","getNextEvent","now","find","event","Container","maxWidth","py","y","map","index","xs","x","delay","transform","CardContent","LocationOnIcon","mr"],"sourceRoot":""}